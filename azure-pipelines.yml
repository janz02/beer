# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:
  DockerImageName: 'nkm-rtd-246410/couponmanager'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'ci'
  displayName: 'Install packages'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      if( $(SkipApiClientCheck) ) { Write-Host "Skipping checking whether the solution is using the latest Api client or not"; return; }
      npm run generate-client
      $changed = git diff --stat
      if( $changed ) { `
        throw "There is a new version of the Backend API, please refresh the frontend api client by running `
        npm run generate-client, and commiting the changes. `
        If this is an urgent case, you can override SkipApiClientCheck parameter manually in the Advanved options in the build." `
      } else { `
        Write-Host "The solution is using the latest API client." `
      }
  displayName: 'Check for new version of the Backend API'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'run build'
  displayName: 'Build solution'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'test -- --watchAll=false --reporters jest-junit --coverage --coverageDirectory=output --coverageReporters cobertura'
  displayName: 'Run Tests'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: '**/junit.xml'

- task: reportgenerator@4
  inputs:
    reports: '$(Build.SourcesDirectory)/**/cobertura-coverage.xml'
    targetdir: '$(Build.SourcesDirectory)/CodeCoverage'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'

- task: Docker@0
  displayName: 'Build Docker image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'NKM-RTD-GCP-DockerRegistry'
    imageName: '$(DockerImageName):$(Build.BuildId)'
    dockerfile: 'Dockerfile'

- task: Docker@0
  displayName: 'Publish Docker Image'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryConnection: 'NKM-RTD-GCP-DockerRegistry'
    action: 'Push an image'
    imageName: '$(DockerImageName):$(Build.BuildId)'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
