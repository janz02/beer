{
  "openapi": "3.0.1",
  "info": {
    "title": "NKM PKM Files Api",
    "version": "v1"
  },
  "paths": {
    "/api/Files": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Uploads a file to the server",
        "operationId": "uploadFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  },
                  "fileAccess": {
                    "$ref": "#/components/schemas/FileAccess"
                  }
                }
              },
              "encoding": {
                "file": {
                  "contentType": "multipart/form-data",
                  "style": "form"
                },
                "fileAccess": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/{id}": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Downloads a file from the server",
        "operationId": "downloadFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the file to download",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the file to download",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested File.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Sets a file expired",
        "operationId": "deleteFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the file",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the file",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Files/{id}/Info": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Returns info about the requested file",
        "operationId": "infoFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the file",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the file",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/Create": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Creates a file on internal storage and leaves it open to append",
        "operationId": "createFile",
        "requestBody": {
          "description": "DTO containing details and content of the file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/{id}/Append": {
      "put": {
        "tags": [
          "Files"
        ],
        "summary": "Appends to a file on internal storage(not a new line)",
        "operationId": "appendFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID to append to",
            "required": true,
            "schema": {
              "type": "string",
              "description": "File ID to append to",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "Parameters of appending",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppendDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Files/{id}/Close": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Closes a file on the internal storage",
        "operationId": "closeFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File ID to close",
            "required": true,
            "schema": {
              "type": "string",
              "description": "File ID to close",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileVm"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/Thumbnail": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Gets the thumbnail of a file",
        "operationId": "downloadThumbnail",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ThumbNailSize"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested File.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Files/{id}/Keep": {
      "put": {
        "tags": [
          "Files"
        ],
        "summary": "Deletes a file expiration date",
        "operationId": "keepFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Files/Prune": {
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Deletes all expired files",
        "operationId": "pruneFile",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Information": {
      "get": {
        "tags": [
          "Information"
        ],
        "summary": "Returns a list of all the exception errorkeys",
        "operationId": "getErrorKeys",
        "responses": {
          "200": {
            "description": "Successful query: string list of exception errorkeys",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FileAccess": {
        "enum": [
          "Public",
          "Private"
        ],
        "type": "string"
      },
      "FileVm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "sizeInBytes": {
            "type": "integer",
            "format": "int64"
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileContentType": {
        "enum": [
          "TextPlain",
          "TextCsv"
        ],
        "type": "string"
      },
      "CreateFileDto": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileAccess": {
            "$ref": "#/components/schemas/FileAccess"
          },
          "fileContentType": {
            "$ref": "#/components/schemas/FileContentType"
          }
        },
        "additionalProperties": false
      },
      "AppendDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThumbNailSize": {
        "enum": [
          "Normal",
          "Small"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}