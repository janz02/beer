/* tslint:disable */
/* eslint-disable */
/**
 * NKM PKM Coupon Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileVm
 */
export interface FileVm {
    /**
     * 
     * @type {string}
     * @memberof FileVm
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FileVm
     */
    fileName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FileVm
     */
    extension?: string | null;
    /**
     * 
     * @type {number}
     * @memberof FileVm
     */
    sizeInBytes?: number | null;
    /**
     * 
     * @type {string}
     * @memberof FileVm
     */
    contentType?: string | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof FileVm
     */
    properties?: { [key: string]: string; } | null;
}

export function FileVmFromJSON(json: any): FileVm {
    return FileVmFromJSONTyped(json, false);
}

export function FileVmFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileVm {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'extension': !exists(json, 'extension') ? undefined : json['extension'],
        'sizeInBytes': !exists(json, 'sizeInBytes') ? undefined : json['sizeInBytes'],
        'contentType': !exists(json, 'contentType') ? undefined : json['contentType'],
        'properties': !exists(json, 'properties') ? undefined : json['properties'],
    };
}

export function FileVmToJSON(value?: FileVm | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'fileName': value.fileName,
        'extension': value.extension,
        'sizeInBytes': value.sizeInBytes,
        'contentType': value.contentType,
        'properties': value.properties,
    };
}


