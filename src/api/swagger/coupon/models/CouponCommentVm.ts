/* tslint:disable */
/* eslint-disable */
/**
 * Optima Coupon
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CouponState,
    CouponStateFromJSON,
    CouponStateFromJSONTyped,
    CouponStateToJSON,
} from './';

/**
 * 
 * @export
 * @interface CouponCommentVm
 */
export interface CouponCommentVm {
    /**
     * 
     * @type {number}
     * @memberof CouponCommentVm
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof CouponCommentVm
     */
    couponId?: number;
    /**
     * 
     * @type {string}
     * @memberof CouponCommentVm
     */
    comment?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CouponCommentVm
     */
    from?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CouponCommentVm
     */
    dateTime?: Date;
    /**
     * 
     * @type {CouponState}
     * @memberof CouponCommentVm
     */
    stateFrom?: CouponState;
    /**
     * 
     * @type {CouponState}
     * @memberof CouponCommentVm
     */
    stateTo?: CouponState;
}

export function CouponCommentVmFromJSON(json: any): CouponCommentVm {
    return CouponCommentVmFromJSONTyped(json, false);
}

export function CouponCommentVmFromJSONTyped(json: any, ignoreDiscriminator: boolean): CouponCommentVm {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'couponId': !exists(json, 'couponId') ? undefined : json['couponId'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'from': !exists(json, 'from') ? undefined : json['from'],
        'dateTime': !exists(json, 'dateTime') ? undefined : (new Date(json['dateTime'])),
        'stateFrom': !exists(json, 'stateFrom') ? undefined : CouponStateFromJSON(json['stateFrom']),
        'stateTo': !exists(json, 'stateTo') ? undefined : CouponStateFromJSON(json['stateTo']),
    };
}

export function CouponCommentVmToJSON(value?: CouponCommentVm | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'couponId': value.couponId,
        'comment': value.comment,
        'from': value.from,
        'dateTime': value.dateTime === undefined ? undefined : (value.dateTime.toISOString()),
        'stateFrom': CouponStateToJSON(value.stateFrom),
        'stateTo': CouponStateToJSON(value.stateTo),
    };
}


