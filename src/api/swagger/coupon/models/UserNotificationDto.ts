/* tslint:disable */
/* eslint-disable */
/**
 * Optima Coupon
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NotificationType,
    NotificationTypeFromJSON,
    NotificationTypeFromJSONTyped,
    NotificationTypeToJSON,
    UserNotificationDetailDto,
    UserNotificationDetailDtoFromJSON,
    UserNotificationDetailDtoFromJSONTyped,
    UserNotificationDetailDtoToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserNotificationDto
 */
export interface UserNotificationDto {
    /**
     * 
     * @type {number}
     * @memberof UserNotificationDto
     */
    id?: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserNotificationDto
     */
    isSeen?: boolean;
    /**
     * 
     * @type {NotificationType}
     * @memberof UserNotificationDto
     */
    type?: NotificationType;
    /**
     * 
     * @type {Date}
     * @memberof UserNotificationDto
     */
    createdDate?: Date;
    /**
     * 
     * @type {UserNotificationDetailDto}
     * @memberof UserNotificationDto
     */
    parent?: UserNotificationDetailDto;
    /**
     * 
     * @type {UserNotificationDetailDto}
     * @memberof UserNotificationDto
     */
    actual?: UserNotificationDetailDto;
    /**
     * 
     * @type {string}
     * @memberof UserNotificationDto
     */
    value?: string | null;
}

export function UserNotificationDtoFromJSON(json: any): UserNotificationDto {
    return UserNotificationDtoFromJSONTyped(json, false);
}

export function UserNotificationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserNotificationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isSeen': !exists(json, 'isSeen') ? undefined : json['isSeen'],
        'type': !exists(json, 'type') ? undefined : NotificationTypeFromJSON(json['type']),
        'createdDate': !exists(json, 'createdDate') ? undefined : (new Date(json['createdDate'])),
        'parent': !exists(json, 'parent') ? undefined : UserNotificationDetailDtoFromJSON(json['parent']),
        'actual': !exists(json, 'actual') ? undefined : UserNotificationDetailDtoFromJSON(json['actual']),
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function UserNotificationDtoToJSON(value?: UserNotificationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'isSeen': value.isSeen,
        'type': NotificationTypeToJSON(value.type),
        'createdDate': value.createdDate === undefined ? undefined : (value.createdDate.toISOString()),
        'parent': UserNotificationDetailDtoToJSON(value.parent),
        'actual': UserNotificationDetailDtoToJSON(value.actual),
        'value': value.value,
    };
}


