/* tslint:disable */
/* eslint-disable */
/**
 * NKM RTD CampaignEditor API
 * <h5>UI handler and the main responsibility carrier of the application, the two step transaction handling owner. The API defines the public interface for the UI and all the user exposed functions are routed here. The actual methods are supports basic segmentation creation and CSV upload functionality. CSV upload is supported via sharepoint. Authentication and JWT token are generated here from <b>Active Directory</b> login. The substraction of public api descriptions are on the API descriptions.</h5>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NKMRTDApplicationModelsCampaignLanguageVm
 */
export interface NKMRTDApplicationModelsCampaignLanguageVm {
    /**
     * 
     * @type {number}
     * @memberof NKMRTDApplicationModelsCampaignLanguageVm
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof NKMRTDApplicationModelsCampaignLanguageVm
     */
    isoCode?: string | null;
}

export function NKMRTDApplicationModelsCampaignLanguageVmFromJSON(json: any): NKMRTDApplicationModelsCampaignLanguageVm {
    return NKMRTDApplicationModelsCampaignLanguageVmFromJSONTyped(json, false);
}

export function NKMRTDApplicationModelsCampaignLanguageVmFromJSONTyped(json: any, ignoreDiscriminator: boolean): NKMRTDApplicationModelsCampaignLanguageVm {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'isoCode': !exists(json, 'isoCode') ? undefined : json['isoCode'],
    };
}

export function NKMRTDApplicationModelsCampaignLanguageVmToJSON(value?: NKMRTDApplicationModelsCampaignLanguageVm | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'isoCode': value.isoCode,
    };
}


