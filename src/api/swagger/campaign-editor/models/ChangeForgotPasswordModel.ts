/* tslint:disable */
/* eslint-disable */
/**
 * NKM RTD CampaignEditor API
 * <h5>UI handler and the main responsibility carrier of the application, the two step transaction handling owner. The API defines the public interface for the UI and all the user exposed functions are routed here. The actual methods are supports basic segmentation creation and CSV upload functionality. CSV upload is supported via sharepoint. Authentication and JWT token are generated here from <b>Active Directory</b> login. The substraction of public api descriptions are on the API descriptions.</h5>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChangeForgotPasswordUserExtensionInfoUpdateModel,
    ChangeForgotPasswordUserExtensionInfoUpdateModelFromJSON,
    ChangeForgotPasswordUserExtensionInfoUpdateModelFromJSONTyped,
    ChangeForgotPasswordUserExtensionInfoUpdateModelToJSON,
} from './';

/**
 * 
 * @export
 * @interface ChangeForgotPasswordModel
 */
export interface ChangeForgotPasswordModel {
    /**
     * One-time guid that identifies the user for this operation.
     * @type {string}
     * @memberof ChangeForgotPasswordModel
     */
    guid?: string;
    /**
     * The new password which will be set.
     * @type {string}
     * @memberof ChangeForgotPasswordModel
     */
    newPassword: string;
    /**
     * Extension object which can contain values to set.<br />  Set this object only if you want to modify the user\'s extension information to the given values.<br />  If you do not set a property, it will not be modified.
     * @type {ChangeForgotPasswordUserExtensionInfoUpdateModel}
     * @memberof ChangeForgotPasswordModel
     */
    extensionInfo?: ChangeForgotPasswordUserExtensionInfoUpdateModel | null;
}

export function ChangeForgotPasswordModelFromJSON(json: any): ChangeForgotPasswordModel {
    return ChangeForgotPasswordModelFromJSONTyped(json, false);
}

export function ChangeForgotPasswordModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeForgotPasswordModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'guid': !exists(json, 'guid') ? undefined : json['guid'],
        'newPassword': json['newPassword'],
        'extensionInfo': !exists(json, 'extensionInfo') ? undefined : ChangeForgotPasswordUserExtensionInfoUpdateModelFromJSON(json['extensionInfo']),
    };
}

export function ChangeForgotPasswordModelToJSON(value?: ChangeForgotPasswordModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'guid': value.guid,
        'newPassword': value.newPassword,
        'extensionInfo': ChangeForgotPasswordUserExtensionInfoUpdateModelToJSON(value.extensionInfo),
    };
}


