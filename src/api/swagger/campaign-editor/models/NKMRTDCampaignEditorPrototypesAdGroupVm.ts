/* tslint:disable */
/* eslint-disable */
/**
 * NKM RTD CampaignEditor API
 * <h5>UI handler and the main responsibility carrier of the application, the two step transaction handling owner. The API defines the public interface for the UI and all the user exposed functions are routed here. The actual methods are supports basic segmentation creation and CSV upload functionality. CSV upload is supported via sharepoint. Authentication and JWT token are generated here from <b>Active Directory</b> login. The substraction of public api descriptions are on the API descriptions.</h5>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A model to describe an ad group that belongs to permissions.
 * @export
 * @interface NKMRTDCampaignEditorPrototypesAdGroupVm
 */
export interface NKMRTDCampaignEditorPrototypesAdGroupVm {
    /**
     * The id of the ad group.
     * @type {number}
     * @memberof NKMRTDCampaignEditorPrototypesAdGroupVm
     */
    id?: number;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof NKMRTDCampaignEditorPrototypesAdGroupVm
     */
    name?: string | null;
    /**
     * Whether the connection between the ad group and the permission is \'live\' or \'active\'.  True means users belonging to the group are given the permission. False means they are not.
     * @type {boolean}
     * @memberof NKMRTDCampaignEditorPrototypesAdGroupVm
     */
    isSelected?: boolean;
}

export function NKMRTDCampaignEditorPrototypesAdGroupVmFromJSON(json: any): NKMRTDCampaignEditorPrototypesAdGroupVm {
    return NKMRTDCampaignEditorPrototypesAdGroupVmFromJSONTyped(json, false);
}

export function NKMRTDCampaignEditorPrototypesAdGroupVmFromJSONTyped(json: any, ignoreDiscriminator: boolean): NKMRTDCampaignEditorPrototypesAdGroupVm {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'isSelected': !exists(json, 'isSelected') ? undefined : json['isSelected'],
    };
}

export function NKMRTDCampaignEditorPrototypesAdGroupVmToJSON(value?: NKMRTDCampaignEditorPrototypesAdGroupVm | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'isSelected': value.isSelected,
    };
}


