/* tslint:disable */
/* eslint-disable */
/**
 * NKM RTD CampaignEditor API
 * <h5>UI handler and the main responsibility carrier of the application, the two step transaction handling owner. The API defines the public interface for the UI and all the user exposed functions are routed here. The actual methods are supports basic segmentation creation and CSV upload functionality. CSV upload is supported via sharepoint. Authentication and JWT token are generated here from <b>Active Directory</b> login. The substraction of public api descriptions are on the API descriptions.</h5>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    MicrosoftAspNetCoreMvcProblemDetails,
    MicrosoftAspNetCoreMvcProblemDetailsFromJSON,
    MicrosoftAspNetCoreMvcProblemDetailsToJSON,
    NKMRTDCampaignEditorPrototypesActionEvent,
    NKMRTDCampaignEditorPrototypesActionEventFromJSON,
    NKMRTDCampaignEditorPrototypesActionEventToJSON,
} from '../models';

/**
 * no description
 */
export class EmailsApi extends runtime.BaseAPI {

    /**
     * Sent message not means action has been made, only has chance for an action if the  appropriate conditions are met.
     * Sends the appropriate campaigns for the message processor engine.
     */
    async sendEmailRaw(): Promise<runtime.ApiResponse<Array<NKMRTDCampaignEditorPrototypesActionEvent>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Emails/Send`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(NKMRTDCampaignEditorPrototypesActionEventFromJSON));
    }

    /**
     * Sent message not means action has been made, only has chance for an action if the  appropriate conditions are met.
     * Sends the appropriate campaigns for the message processor engine.
     */
    async sendEmail(): Promise<Array<NKMRTDCampaignEditorPrototypesActionEvent>> {
        const response = await this.sendEmailRaw();
        return await response.value();
    }

}
