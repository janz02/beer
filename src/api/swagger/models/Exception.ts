/* tslint:disable */
/* eslint-disable */
/**
 * NKM PKM Coupon Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MethodBase,
    MethodBaseFromJSON,
    MethodBaseFromJSONTyped,
    MethodBaseToJSON,
} from './';

/**
 * 
 * @export
 * @interface Exception
 */
export interface Exception {
    /**
     * 
     * @type {MethodBase}
     * @memberof Exception
     */
    targetSite?: MethodBase;
    /**
     * 
     * @type {string}
     * @memberof Exception
     */
    readonly stackTrace?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Exception
     */
    readonly message?: string | null;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof Exception
     */
    readonly data?: { [key: string]: object; } | null;
    /**
     * 
     * @type {Exception}
     * @memberof Exception
     */
    innerException?: Exception;
    /**
     * 
     * @type {string}
     * @memberof Exception
     */
    helpLink?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Exception
     */
    source?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Exception
     */
    hResult?: number;
}

export function ExceptionFromJSON(json: any): Exception {
    return ExceptionFromJSONTyped(json, false);
}

export function ExceptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Exception {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'targetSite': !exists(json, 'targetSite') ? undefined : MethodBaseFromJSON(json['targetSite']),
        'stackTrace': !exists(json, 'stackTrace') ? undefined : json['stackTrace'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'innerException': !exists(json, 'innerException') ? undefined : ExceptionFromJSON(json['innerException']),
        'helpLink': !exists(json, 'helpLink') ? undefined : json['helpLink'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'hResult': !exists(json, 'hResult') ? undefined : json['hResult'],
    };
}

export function ExceptionToJSON(value?: Exception | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'targetSite': MethodBaseToJSON(value.targetSite),
        'innerException': ExceptionToJSON(value.innerException),
        'helpLink': value.helpLink,
        'source': value.source,
        'hResult': value.hResult,
    };
}


