/* tslint:disable */
/* eslint-disable */
/**
 * NKM PKM Coupon Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NotificationType,
    NotificationTypeFromJSON,
    NotificationTypeFromJSONTyped,
    NotificationTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface AddNotificationTestCommand
 */
export interface AddNotificationTestCommand {
    /**
     * 
     * @type {NotificationType}
     * @memberof AddNotificationTestCommand
     */
    type?: NotificationType;
    /**
     * 
     * @type {Date}
     * @memberof AddNotificationTestCommand
     */
    createdDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof AddNotificationTestCommand
     */
    parentId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof AddNotificationTestCommand
     */
    actualId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof AddNotificationTestCommand
     */
    isSeen?: boolean;
}

export function AddNotificationTestCommandFromJSON(json: any): AddNotificationTestCommand {
    return AddNotificationTestCommandFromJSONTyped(json, false);
}

export function AddNotificationTestCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddNotificationTestCommand {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : NotificationTypeFromJSON(json['type']),
        'createdDate': !exists(json, 'createdDate') ? undefined : (json['createdDate'] === null ? null : new Date(json['createdDate'])),
        'parentId': !exists(json, 'parentId') ? undefined : json['parentId'],
        'actualId': !exists(json, 'actualId') ? undefined : json['actualId'],
        'isSeen': !exists(json, 'isSeen') ? undefined : json['isSeen'],
    };
}

export function AddNotificationTestCommandToJSON(value?: AddNotificationTestCommand | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': NotificationTypeToJSON(value.type),
        'createdDate': value.createdDate === undefined ? undefined : (value.createdDate === null ? null : value.createdDate.toISOString()),
        'parentId': value.parentId,
        'actualId': value.actualId,
        'isSeen': value.isSeen,
    };
}


